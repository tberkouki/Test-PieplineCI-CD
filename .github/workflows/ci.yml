# Define the name of the workflow
name: Deploy to AWS

# Specify the trigger for the workflow
on:
  push:
    branches:
      - main
      - develop

# Define environment variables for the AWS CLI
env:
  AWS_REGION: us-west-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

# Define the job for the workflow
jobs:
  deploy:
    # Specify the operating system for the runner
    runs-on: ubuntu-latest

    # Define the steps for the job
    steps:
    - name: Checkout code
      # Use the checkout action to check out the code from the repository
      uses: actions/checkout@v2

    - name: Setup environment
      # Install the dependencies required for building the React app and deploying to AWS
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
        curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
        sudo apt-get install -y nodejs
        sudo apt-get install -y build-essential
        yarn install

    - name: Test React app
      # Run tests on the React app
      run: |
        yarn test

    - name: Build React app
      # Build the React app using yarn
      run: |
        yarn build

    - name: Package React app
      # Package the built React app and upload it as an artifact to AWS S3
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build

    - name: Deploy React app to AWS S3
      # Deploy the packaged React app to AWS S3 using the AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ env.AWS_REGION }}
        aws s3 sync build s3://{{ env.S3_BUCKET }}/build

    - name: Package Spring Boot app
      # Package the Spring Boot app using the Gradle wrapper
      run: |
        ./gradlew bootJar

    - name: Deploy Spring Boot app to AWS CodeDeploy
      # Configure the AWS CLI with the necessary credentials and region
      run: |
        aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region ${{ env.AWS_REGION }}
      # Deploy the packaged Spring Boot app to AWS CodeDeploy
      run: |
        # Create a new deployment in CodeDeploy
        result=$(aws deploy create-deployment \
          --application-name {{ env.CD_APPLICATION_NAME }} \
          --deployment-group-name {{ env.CD_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket={{ env.CD_BUCKET_NAME }},key={{ env.CD_KEY }},bundleType={{ env.CD_BUNDLE_TYPE }})
        if [ $? -ne 0 ]; then
          echo "Error: Failed to create deployment: $result"
          exit 1
        fi
        echo "Successfully created deployment: $result"